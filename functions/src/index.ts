import * as functions from "firebase-functions";
import * as admin from "firebase-admin";
import { GoogleGenerativeAI } from "@google/generative-ai";

// Initialize Firebase Admin SDK
admin.initializeApp();

// Initialize Gemini AI Client
const geminiApiKey = functions.config().gemini.key;
if (!geminiApiKey) {
  console.error(
    "Gemini API key not found. Set it using 'firebase functions:config:set gemini.key=\"YOUR_API_KEY\"'"
  );
}
const genAI = new GoogleGenerativeAI(geminiApiKey);

/**
 * An HTTPS Callable function that takes a text prompt and returns a
 * movie idea generated by the Gemini Pro model.
 */
export const generateMovie = functions.https.onCall(
  async (data, context) => {
    // 1. Authentication Check
    // onCall functions automatically provide auth context.
    if (!context.auth) {
      throw new functions.https.HttpsError(
        "unauthenticated",
        "The function must be called while authenticated."
      );
    }

    // 2. Input Validation
    const prompt = data.prompt;
    if (!(typeof prompt === "string") || prompt.length === 0) {
      throw new functions.https.HttpsError(
        "invalid-argument",
        "The function must be called with a valid 'prompt' argument."
      );
    }

    try {
      // 3. Call the Gemini API
      console.log(`Received prompt: "${prompt}"`);
      const model = genAI.getGenerativeModel({ model: "gemini-pro" });

      const fullPrompt = `Generate a short movie script idea based on the following topic: "${prompt}". The idea should include a title, a one-sentence logline, and a brief 3-act summary. Format the response as simple text.`;

      const result = await model.generateContent(fullPrompt);
      const response = await result.response;
      const text = response.text();

      console.log("Successfully generated content from Gemini.");
      return { status: "success", generatedText: text };
    } catch (error) {
      console.error("Error calling Gemini API:", error);
      throw new functions.https.HttpsError(
        "internal",
        "Failed to generate content from Gemini."
      );
    }
  }
);
